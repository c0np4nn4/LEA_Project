script> if [ -f   /opt/Xilinx/14.1/ISE_DS/settings32.sh ]; then 
script>  source /opt/Xilinx/14.1/ISE_DS/settings32.sh >> /tmp/log 
script> fi
script> if [ -f   /opt/Xilinx/14.1/ISE_DS/settings64.sh ]; then
script>  source /opt/Xilinx/14.1/ISE_DS/settings64.sh >> /tmp/log
script> fi
script>  
script> echo PNULib= $FLOWRIANLIBRARY/PNULib/ISim/PNULib >> LEA_BlockSubtractor_tb.init
script> echo work=./work >> LEA_BlockSubtractor_tb.init
script> echo verilog work PNU_OR2.v >> LEA_BlockSubtractor_tb.prj
script> echo verilog work PNU_AND2.v >> LEA_BlockSubtractor_tb.prj
script> echo verilog work PNU_XOR2.v >> LEA_BlockSubtractor_tb.prj
script> echo verilog work PNU_NOT.v >> LEA_BlockSubtractor_tb.prj
script> echo verilog work PNU_ONE.v >> LEA_BlockSubtractor_tb.prj
script> echo verilog work LEA_FinAdder.v >> LEA_BlockSubtractor_tb.prj
script> echo verilog work LEA_FullAdder.v >> LEA_BlockSubtractor_tb.prj
script> echo verilog work LEA_BlockSubtractor.v >> LEA_BlockSubtractor_tb.prj
INFO:Simulator:908 - Using init file passed via -initfile option
   "LEA_BlockSubtractor_tb.init"
Running: /opt/Xilinx/14.1/ISE_DS/ISE/bin/lin/unwrapped/fuse -top work.LEA_BlockSubtractor_tb -init LEA_BlockSubtractor_tb.init -prj LEA_BlockSubtractor_tb.prj -lib PNULib -o LEA_BlockSubtractor_tb.exe
ISim P.15xf (signature 0x8ddf5b5d)
Number of CPUs detected in this system: 4
Turning on mult-threading, number of parallel sub-compilation jobs: 8
Determining compilation order of HDL files
Analyzing Verilog file "PNU_OR2.v" into library work
Analyzing Verilog file "PNU_AND2.v" into library work
Analyzing Verilog file "PNU_XOR2.v" into library work
Analyzing Verilog file "PNU_NOT.v" into library work
Analyzing Verilog file "PNU_ONE.v" into library work
Analyzing Verilog file "LEA_FinAdder.v" into library work
Analyzing Verilog file "LEA_FullAdder.v" into library work
Analyzing Verilog file "LEA_BlockSubtractor.v" into library work
Analyzing Verilog file "LEA_BlockSubtractor_tb.v" into library work
Starting static elaboration
Completed static elaboration
Fuse Memory Usage: 36264 KB
Fuse CPU Usage: 1250 ms
Compiling module PNU_XOR2
Compiling module PNU_AND2
Compiling module PNU_OR2
Compiling module LEA_FullAdder
Compiling module LEA_FinAdder
Compiling module PNU_ONE
Compiling module PNU_NOT
Compiling module LEA_BlockSubtractor
Compiling module LEA_BlockSubtractor_tb
Time Resolution for simulation is 1ps.
Waiting for 1 sub-compilation(s) to finish...
Compiled 9 Verilog Units
Built simulation executable LEA_BlockSubtractor_tb.exe
Fuse Memory Usage: 79696 KB
Fuse CPU Usage: 1300 ms
GCC CPU Usage: 1000 ms
script> echo verilog work LEA_BlockSubtractor_tb.v >> LEA_BlockSubtractor_tb.prj
script> fuse -top work.LEA_BlockSubtractor_tb -init LEA_BlockSubtractor_tb.init -prj LEA_BlockSubtractor_tb.prj  -lib PNULib -o LEA_BlockSubtractor_tb.exe
script> rm LEA_BlockSubtractor_tb.init
script> rm LEA_BlockSubtractor_tb.prj
script> rm fuse.xmsgs
script> rm fuseRelaunch.cmd
script> rm LEA_BlockSubtractor_tb.exe  fuse.log 
script> rm -rf isim
script> rm -rf ./work
script> rm -rf PNU_AND2.v
script> rm -rf PNU_AND3.v
script> rm -rf PNU_AND4.v
script> rm -rf PNU_AND8.v
script> rm -rf PNU_BUF.v
script> rm -rf PNU_DFF.v
script> rm -rf PNU_DFF_Ce.v
script> rm -rf PNU_JKFF.v
script> rm -rf PNU_MUX2.v
script> rm -rf PNU_MUX4.v
script> rm -rf PNU_MUX8.v
script> rm -rf PNU_NAND2.v
script> rm -rf PNU_NAND3.v
script> rm -rf PNU_NAND4.v
script> rm -rf PNU_NAND8.v
script> rm -rf PNU_NOR2.v
script> rm -rf PNU_NOR3.v
script> rm -rf PNU_NOR4.v
script> rm -rf PNU_NOR8.v
script> rm -rf PNU_NOT.v
script> rm -rf PNU_ONE.v
script> rm -rf PNU_OR2.v
script> rm -rf PNU_OR3.v
script> rm -rf PNU_OR4.v
script> rm -rf PNU_OR8.v
script> rm -rf PNU_SRAM.v
script> rm -rf PNU_TBUF.v
script> rm -rf PNU_XNOR2.v
script> rm -rf PNU_XNOR3.v
script> rm -rf PNU_XNOR4.v
script> rm -rf PNU_XOR2.v
script> rm -rf PNU_XOR3.v
script> rm -rf PNU_XOR4.v
script> rm -rf PNU_ZERO.v
script> rm -rf LEA_32bitBlock.v
script> rm -rf LEA_128bitMessageRegister.v
script> rm -rf LEA_BlockXOR.v
script> rm -rf LEA_TwoAdder.v
script> rm -rf LEA_FullAdder.v
script> rm -rf LEA_FinAdder.v
script> rm -rf LEA_TwoAdder_tb.v
script> rm -rf LEA_FullAdder_tb.v
script> rm -rf LEA_PASS.v
script> rm -rf LEA_ROL9.v
script> rm -rf LEA_ROR3.v
script> rm -rf LEA_ROR5.v
script> rm -rf LEA_BlockXOR_tb.v
script> rm -rf LEA_Encrypt.v
script> rm -rf LEA_Encrypt_tb.v
script> rm -rf LEA_BlockAddition.v
script> rm -rf LEA_128BitsDivideIn16x8Register.v
script> rm -rf LEA_128BitsDivideIn16x8Register_tb.v
script> rm -rf LEA_16Counter.v
script> rm -rf LEA_16Counter_tb.v
script> rm -rf LEA_KeyConstant.v
script> rm -rf LEA_KeyConstant_tb.v
script> rm -rf LEA_ROL3.v
script> rm -rf LEA_ROL5.v
script> rm -rf LEA_ROR9.v
script> rm -rf LEA_FinSub.v
script> rm -rf LEA_FullSub.v
script> rm -rf Subtest.v
script> rm -rf Subtest_tb.v
script> rm -rf LEA_2sComplement.v
script> rm -rf LEA_2sComplement_tb.v
script> rm -rf LEA_BlockSubtractor.v
Finish compilation!!
